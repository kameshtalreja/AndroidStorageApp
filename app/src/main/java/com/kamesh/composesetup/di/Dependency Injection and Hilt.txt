

Dependency Injection

Dependency Injection (DI) is a design pattern widely used in software development, including Android
 app development. It is a technique where the dependencies of a class (i.e., the objects that a class
 depends on to perform its tasks) are provided to it from the outside rather than created within
 the class itself. This helps to achieve several goals, such as improving code maintainability,
 testability, and flexibility.

Types Of Dependency Injection
*Constructor Injection
*Method Injection
*Field Injection : set the property detail from method and can get from anywhere

Hilt

field injection ?
field injection is type of dependency injection where dependency directly injected into fields of the class.
in this approach the dependencies are typically marked with @injection annotation, and the injection framework
or container take care of setting the values of these fields.


what is difference between @binds and @provides ?

@bind tell dagger to understand the relationship between the interface/abstract and it's implementation, while
@provide tells dagger how to create and provide  instance of a particular class. they are both tools in dagger for
managing dependency injection.

provide
-it used to define methods within a dagger module that provide instances of objects.
it's used when you want to explicitly specify how to create and provide instance of particular type.

