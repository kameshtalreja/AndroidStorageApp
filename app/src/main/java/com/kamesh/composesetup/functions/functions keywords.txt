

inline Function: An inline function is a function that, during compilation, is expanded in place at the call site, rather than being called as a regular function.
This can lead to performance improvements by avoiding the overhead of function calls.

Higher Order Function : a higher-order function is a function that takes one or more functions as parameters or returns a function. This concept is a fundamental
part of functional programming and allows you to treat functions as first-class citizens in the language. Higher-order functions can be used to create more abstract and
reusable code.


inner function : In Kotlin, inner functions are functions defined inside another function. They have access to the variables of the outer function.

Extension Function : Allow you to add new functions to existing class without modifying their source code.
these function are defied outside the class they extend but you can called as if they were member function
of the class.
syntax : ClassName.extensionFunction(parameters) : ReturnType{}
-they are defied outside the class they extend.
-they do not have access to private members of the class.



infix function : an infix is function that marketed with the 'infix' keyword. These functions allow you
to call them using infix notation, which means you can call them without using the traditional dot-annotation
 or parentheses. the function should have single parameter, and it must be defined as member or extension
 function.
 - improved readability
 - Conciseness

 syntax : infix fun ClassName.InfixFunction(parameter) : ReturnType{}


 reified
